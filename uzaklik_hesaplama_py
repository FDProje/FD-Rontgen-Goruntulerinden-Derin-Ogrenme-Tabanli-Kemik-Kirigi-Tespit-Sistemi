import cv2

# Read the original image
img = cv2.imread(r"C:\Users\asyao\PycharmProjects\MICROFRACTURES\images\hairline108.jpg")
original_img = img.copy()  # Keep a copy of the original image for later use
zoom_factor = 2  # Set zoom factor to double the image size
points = []  # Declare points globally

# Resize the original image to fit the window size
def resize_image(img):
    screen_width = 1920  # Example width of your screen (use actual screen width)
    screen_height = 1080  # Example height of your screen (use actual screen height)

    height, width = img.shape[:2]
    aspect_ratio = width / height
    new_width = screen_width
    new_height = int(screen_width / aspect_ratio)

    # If resized height exceeds screen height, adjust the width accordingly
    if new_height > screen_height:
        new_height = screen_height
        new_width = int(screen_height * aspect_ratio)

    resized_img = cv2.resize(img, (new_width, new_height))
    return resized_img

# Function to zoom in the image
def zoom_in(img):
    height, width = img.shape[:2]
    zoomed_img = cv2.resize(img, (width * zoom_factor, height * zoom_factor), interpolation=cv2.INTER_LINEAR)
    return zoomed_img

# Mouse click event to select two points
def click_event(event, x, y, flags, params):
    global points  # Make sure to reference the global points variable
    if event == cv2.EVENT_LBUTTONDOWN:
        if len(points) == 2:
            points = []  # Reset points if two points have already been selected
            img_copy = img.copy()  # Create a copy of the image to clear previous annotations
            cv2.imshow('image', img_copy)
        points.append((x, y))
        cv2.circle(img, (x, y), 5, (0, 255, 0), -1)
        cv2.imshow('image', img)
        if len(points) == 2:
            cv2.line(img, points[0], points[1], (255, 0, 0), 2)
            distance_pixels = ((points[0][0] - points[1][0]) ** 2 + (points[0][1] - points[1][1]) ** 2) ** 0.5
            print(f"The distance between the two points is {distance_pixels:.2f} pixels")
            image_width_mm = 2362
            image_height_mm = 1143
            image_width_pixels = img.shape[1]
            image_height_pixels = img.shape[0]
            pixels_to_mm = min(image_width_mm / image_width_pixels, image_height_mm / image_height_pixels)
            distance_mm = distance_pixels * pixels_to_mm
            distance_cm = (distance_mm / 10)
            print(f"Distance: {distance_cm} cm")

            # Draw text on the image
            font = cv2.FONT_HERSHEY_SIMPLEX
            org = (int((points[0][0] + points[1][0]) / 2), int((points[0][1] + points[1][1]) / 2))
            fontScale = 0.7
            color = (255,255,255)
            thickness = 2
            cv2.putText(img, f'{distance_cm:.1f} cm', org, font, fontScale, color, thickness, cv2.LINE_AA)
            cv2.imshow('image', img)

# Resize the original image to fit in the window
img = resize_image(original_img)

# Show the resized image in the window
cv2.imshow('image', img)
cv2.setMouseCallback('image', click_event)

while True:
    key = cv2.waitKey(1) & 0xFF  # Capture keyboard events
    if key == ord('z'):  # 'Z' key to zoom in
        img = zoom_in(original_img)  # Zoom into the original image
        cv2.imshow('image', img)
        print("Image magnified. Click to select points.")
    elif key == 27:  # ESC key to exit the loop
        break

cv2.destroyAllWindows()
